<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
  <!-- Bootstrap icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css">
  <!-- time picker -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.2.3/themes/dark.css">
  <title>Brac</title>
  <style>
    input[type="text"]:focus {
      outline: none;
      box-shadow: inset 0 -3px 0 0 #A683E3;
    }

    .addItemButton:focus {
      outline: none;
      box-shadow: none;
    }

    .rounded-pill {
      border: none;
    }

    #sampleListItem {
      display: none !important;
    }

    #editSwitch {
      box-shadow: none;
    }
  </style>
</head>

<body class="bg-light">
  <%- include("nav"); %>

    <div class="px-2">
      <div class="row row-cols-1 row-cols-md-3 g-3">
        <% daysOfWeek.forEach((day)=>{%>
          <div class="col">

            <div class="card bg-light text-dark shadow-lg rounded border-primary">
              <div class="card-header text-center  bg-transparent border-success">
                <h5>
                  <%= day %>
                </h5>
              </div>
              <div class="card-body p-0">
                <ul class="list-group list-group-flush ">
                </ul>
                <div class="input-group p-0">
                  <input type="text" class="form-control add-class-input" placeholder="add class"
                    aria-label="Recipient's username" aria-describedby="button-addon2" required>
                  <button class="btn btn-outline-secondary border border-secondary  addItemButton" type="button"
                    onclick="addItems(this.parentNode)">
                    <i class="bi bi-plus-circle"></i>
                  </button>
                </div>
              </div>
            </div>

          </div>
          <%});%>
      </div>
    </div>

    <%- include("timeModal"); %>

      <script defer>

        //functuon when a new item is to be added
        addItems = (thisElement) => {
          let inputElem = thisElement.parentNode.children[1].children[0]
          if (inputElem.value.trim() != "") {
            newListItem = document.getElementById("sampleListItem").cloneNode(true)
            newListItem.removeAttribute("id")
            newListItem.prepend(inputElem.value)
            ulElement = thisElement.parentNode.children[0]
            ulElement.appendChild(newListItem)
            inputElem.value = ""
          }
        }
        //function that runs when the link button is pressed
        const enterLink = (thisElement) => {
          editSwitch = document.getElementById("editSwitch")
          if (editSwitch.checked) {
            link = prompt("enter the link to class , once the link has been set , it can only be changed by going to editing mode, after setting the link , presing it will take you you to the link inless editing mode is on ")
            thisElement.innerText = "visit"
            if (isUrl(link)) {
              thisElement.setAttribute("link", link)
            } else {
              thisElement.setAttribute("link", "https://" + link)
            }
          } else if (!editSwitch.checked && !thisElement.hasAttribute("link")) {
            alert("please click the edit button and input a link for class , all types of edit can only be done when editing mode is on then turn it off after editing")
          }
          else {
            window.open(thisElement.getAttribute("link"), '_blank')
          }
        }

        const isUrl = string => {
          try { return Boolean(new URL(string)); }
          catch (e) { return false; }
        }
        const tutFunc = () => {
          alert("to add a class to the list of the day , just type in the input box and press the + button then go to editing mode and add the time and link for class , for deleting just check the checkbox beside the class list item , deleting can only be done in editing mode")
        }

        const modalFunc = (initiatorBtn) => {
          const modalInput = document.getElementById("modalInput")
          if (modalInput.value.length > 0) {
            let time = document.createTextNode(" " + modalInput.value.trim())
            initiatorBtn.children[0].appendChild(time)
            //console.log(initiatorBtn)
          }

        }

        //document.getElementById("timeModal").addEventListener("show.bs.modal", modalFunc(event))
        const enterTime = (thisElement) => {
          //console.log("clicked")
          // const val = flatpickr(thisElement, {
          //   enableTime: true,
          //   noCalendar: true,
          //   dateFormat: "H:i",
          //   wrap: true
          // })
          document.getElementById("modalSaveBtn").addEventListener("click", () => modalFunc(thisElement))
        }

        const modalClose = (event) => {
          console.log(event)
        }
        const editFunc = (thisElement) => {
          //for the time button editing
          if (thisElement.checked) {
            let timeAnchors = document.querySelectorAll('.time-element');
            timeAnchors.forEach(element => element.style.pointerEvents = "auto")
          }
          else {
            let timeAnchors = document.querySelectorAll('.time-element');
            timeAnchors.forEach(element => element.style.pointerEvents = "none")
          }
        }

      </script>
      <!-- Optional JavaScript; choose one of the two! -->

      <!-- Option 1: Bootstrap Bundle with Popper -->
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"
        crossorigin="anonymous"></script>

      <!-- Option 2: Separate Popper and Bootstrap JS -->

      <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"
        integrity="sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG"
        crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js"
        integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc"
        crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/flatpickr@4.6.9/dist/flatpickr.min.js"
        integrity="sha256-AkQap91tDcS4YyQaZY2VV34UhSCxu2bDEIgXXXuf5Hg=" crossorigin="anonymous"></script>
      <!--time  Modal -->

      <!-- sample list element -->

      <%- include("sampleListItem"); %>
</body>

</html>